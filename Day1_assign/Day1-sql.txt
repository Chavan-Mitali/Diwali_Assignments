1. Display top 5 highest salary earners in each dept

SELECT emp_id, name, dept, salary
FROM employee e1
WHERE 
    5 >= (
        SELECT COUNT(*)
        FROM employee e2
        WHERE e2.dept = e1.dept AND e2.salary > e1.salary
    )
ORDER BY dept, salary DESC;


2. Write a stored function getWorkingDays which accepts joining data and returns
the no of working days

DELIMITER $$

CREATE FUNCTION getWorkingDays(joining_date DATE)
RETURNS INT
DETERMINISTIC
BEGIN
    DECLARE total_days INT;
    SET total_days = DATEDIFF(CURDATE(), joining_date) + 1;
    RETURN total_days;
END$$

DELIMITER ;


3. Write a stored procedure which updates the salary of a given emp based on no
of working days. Give differential salary rise based on no of working days.

DELIMITER $$

CREATE PROCEDURE updateSalary(IN empId INT)
BEGIN
    DECLARE wdays INT;
    DECLARE oldSalary DECIMAL(10,2);
    DECLARE newSalary DECIMAL(10,2);

    -- Get old salary
    SELECT salary INTO oldSalary FROM employee WHERE emp_id = empId;

    -- Get working days using the function
    SELECT getWorkingDays(joining_date) INTO wdays
    FROM employee
    WHERE emp_id = empId;

    -- Simple differential salary increase
    IF wdays < 200 THEN
        SET newSalary = oldSalary * 1.05;
    ELSEIF wdays <= 300 THEN
        SET newSalary = oldSalary * 1.10;
    ELSE
        SET newSalary = oldSalary * 1.15;
    END IF;

    -- Update salary
    UPDATE employee
    SET salary = newSalary
    WHERE emp_id = empId;
END$$

DELIMITER ;
